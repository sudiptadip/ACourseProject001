@model ProductVM

<div class="edu-breadcrumb-area breadcrumb-style-3">
    <div class="container">
        <div class="breadcrumb-inner">
            <ul class="edu-breadcrumb">
                <li class="breadcrumb-item"><a asp-area="Customer" asp-controller="Home" asp-action="Index">Home</a></li>
                <li class="separator"><i class="icon-angle-right"></i></li>
                <li class="breadcrumb-item active" aria-current="page">
                    COURSES
                </li>
            </ul>
        </div>
    </div>
</div>

<div class="edu-breadcrum-area mt-4">
    <div class="section-title section-center"
         data-sal="slide-up"
         data-sal-duration="800">
        <h3 class="title">COURSES</h3>
    </div>
</div>

<div class="edu-course-area course-area-1 section-gap-equal">
    <div class="container-fluid">
        <div class="row g-5 carts">
            <div class="col-lg-3 order-lg-1">
                <div class="course-sidebar-2">
                    <div class="edu-course-widget widget-category">
                        <div class="inner">
                            <h5 class="widget-title widget-toggle">Course</h5>
                            <div class="content">
                                @foreach (var item in Model.CategoryList)
                                {
                                    <div class="edu-form-check">
                                        <input type="checkbox" id="cat-check-@item.Id" class="category-filter" value="@item.Id" />
                                        <label for="cat-check-@item.Id">@item.CategoryName</label>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>


                    <div class="edu-course-widget widget-instructor">
                        <div class="inner">
                            <h5 class="widget-title widget-toggle">Subject</h5>
                            <div class="content subjectContent">
                                @* @foreach (var item in Model.SubjectList)
                                {
                                <div class="edu-form-check">
                                <input type="checkbox" id="subject-check-@item.Id" class="subject-filter" value="@item.Id" />
                                <label for="subject-check-@item.Id">@item.SubjectName</label>
                                </div>
                                } *@
                            </div>
                        </div>
                    </div>


                    <div class="edu-course-widget widget-instructor">
                        <div class="inner">
                            <h5 class="widget-title widget-toggle">Faculty</h5>
                            <div class="content">
                                @foreach (var item in Model.FacultyList)
                                {
                                    <div class="edu-form-check">
                                        <input type="checkbox" id="faculty-check-@item.Id" class="faculty-filter" value="@item.Id" />
                                        <label for="faculty-check-@item.Id">@item.FacultyName</label>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>


                </div>
            </div>

            <div class="col-lg-9 col-pr--35 order-lg-2">
                <div class="row g-5" id="productList">
                    @foreach (var item in Model.ProductList)
                    {
                        <div class="col-md-6 col-lg-4 col-xl-3" data-sal-delay="100" data-sal="slide-up" data-sal-duration="800">
                            <div class="edu-course course-style-1 hover-button-bg-white">
                                <div class="inner">
                                    <div class="thumbnail">
                                        <a asp-area="Customer" asp-controller="Product" asp-action="Details" asp-route-id="@item.Id">
                                            <img src="@item.ProductImageUrl" alt="Course Meta" />
                                        </a>

                                        <div class="overlay"></div>
                                        <div class="button">
                                            <a asp-area="Customer" asp-controller="Product" asp-action="Details" asp-route-id="@item.Id">View</a>
                                        </div>
                                    </div>
                                    <div class="content">
                                        <h6 class="title">
                                            <a asp-area="Customer" asp-controller="Product" asp-action="Details" asp-route-id="@item.Id">@item.ProductName</a>
                                        </h6>

                                        <div class="d-flex align-items-center mb-3">
                                            <a href="#" class="faculty_name">@item.Faculty.FacultyName</a>
                                        </div>
                                        <div class="course-price">
                                            <span class="ori_price">
                                                <i class="fa-solid fa-indian-rupee-sign"></i> @item.DefaultDiscountPrice
                                            </span>
                                            <span class="del-price">
                                                <i class="fa-solid fa-indian-rupee-sign"></i> @item.DefaultPrice
                                            </span>
                                            <span class="dis_price">
                                                <i class="fa-solid fa-indian-rupee-sign"></i> @(item.DefaultPrice - item.DefaultDiscountPrice) off
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <ul class="edu-pagination">
            @if (ViewBag.CurrentPage > 1)
            {
                <li><a href="#" data-page="@((int)ViewBag.CurrentPage - 1)" aria-label="Previous"><i class="icon-west"></i></a></li>
            }

            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                if (i == ViewBag.CurrentPage)
                {
                    <li class="active"><a href="#" data-page="@i">@i</a></li>
                }
                else
                {
                    <li><a href="#" data-page="@i">@i</a></li>
                }
            }

            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
            {
                <li><a href="#" data-page="@((int)ViewBag.CurrentPage + 1)" aria-label="Next"><i class="icon-east"></i></a></li>
            }
        </ul>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            const urlParams = new URLSearchParams(window.location.search);
            const CategoryId = urlParams.get('Course');
            const SubjectId = urlParams.get('Subject');

            // Store currently selected subjects
            let selectedSubjects = [];

            // Preselect category and subject filters if present in query params
            if (CategoryId) {
                $(`.category-filter[value="${CategoryId}"]`).prop('checked', true);
            }
            if (SubjectId) {
                selectedSubjects.push(SubjectId);
            }

            // Initialize subject filter after preselecting categories
            updateSubjectFilter(true);

            // Add event listener for category selection
            $('.category-filter').on('change', function () {
                // Save current selections
                selectedSubjects = [];
                $('.subject-filter:checked').each(function () {
                    selectedSubjects.push($(this).val());
                });

                updateSubjectFilter(false);
                applyFilters(1);
            });

            function updateSubjectFilter(triggerFilter) {
                let selectedCategories = [];

                // Collect selected category filters
                $('.category-filter:checked').each(function () {
                    selectedCategories.push($(this).val());
                });

                // Send AJAX request to get the relevant subjects
                $.ajax({
                    url: '@Url.Action("GetSubjectsByCategories", "Product")',
                    type: 'POST',
                    data: {
                        categoryIds: selectedCategories
                    },
                    success: function (response) {
                        $('.subjectContent').empty();
                        response.forEach(subject => {
                            let isChecked = selectedSubjects.includes(subject.id.toString()) ? 'checked' : '';
                            $('.subjectContent').append(`
                                                <div class="edu-form-check">
                                                    <input type="checkbox" id="subject-check-${subject.id}" class="subject-filter" value="${subject.id}" ${isChecked} />
                                                    <label for="subject-check-${subject.id}">${subject.subjectName}</label>
                                                </div>
                                            `);
                        });

                        // Trigger the filter function if required
                        if (triggerFilter) {
                            if (SubjectId) {
                                $(`.subject-filter[value="${SubjectId}"]`).prop('checked', true);
                            }
                            applyFilters(1); // Apply filters explicitly after initial selection
                        }
                    },
                    error: function (error) {
                        console.error("Error fetching subjects:", error);
                    }
                });
            }

            $(document).on('change', '.category-filter, .faculty-filter, .subject-filter', function () {
                applyFilters(1);
            });

            // Handle pagination link clicks
            $(document).on('click', '.edu-pagination a', function (e) {
                e.preventDefault(); // Prevent default link behavior
                const page = $(this).attr('data-page');
                applyFilters(page); // Fetch the selected page
            });

            function applyFilters(page) {
                let categories = [];
                let faculties = [];
                let subjects = [];

                // Collect selected category filters
                $('.category-filter:checked').each(function () {
                    categories.push($(this).val());
                });

                // Collect selected faculty filters
                $('.faculty-filter:checked').each(function () {
                    faculties.push($(this).val());
                });

                // Collect selected subject filters
                $('.subject-filter:checked').each(function () {
                    subjects.push($(this).val());
                });

                function getProductCategoryFromUrl() {
                    const urlParams = new URLSearchParams(window.location.search);
                    return urlParams.get('productCategory');
                }

                const productCategory = getProductCategoryFromUrl();

                $.ajax({
                    url: '@Url.Action("FilterProducts", "Product")',
                    type: 'POST',
                    data: {
                        categories: categories,
                        faculties: faculties,
                        subjects: subjects,
                        page: page,
                        productCategory: productCategory ?? ""
                    },
                    success: function (response) {
                        $('#productList').html(response.productsHtml); // Update the product list
                        $('.edu-pagination').html(response.paginationHtml); // Update the pagination
                        sal(); // Reinitialize animations (if needed)
                    },
                    error: function (error) {
                        console.error("Error filtering products:", error);
                    }
                });
            }
        });
    </script>
}